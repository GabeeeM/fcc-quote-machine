{"ast":null,"code":"var _jsxFileName = \"/home/gabem/Desktop/get-skill-quote-machine/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet quoteDB = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n\nfunction App() {\n  _s();\n\n  const [quote, setQuote] = useState(\"If you do what you’ve always done, you’ll get what you’ve always gotten.\");\n  const [author, setAuthor] = useState(\"Gabriel Mack\");\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [quotes, setQuotes] = useState(null);\n  useEffect(quoteDB => {\n    const fetchQuotes = async(quoteDB);\n  }, [quoteDB]);\n\n  const changeQuoteAndAuthor = () => {\n    setQuote(\"balls\");\n    setAuthor(\"Ryan Barros\");\n  };\n\n  const genRandomNumber = () => {\n    setQuote(quotes[Math.floor(Math.random() * quotes.length)]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Random Number: \", randomNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRandomNumber(genRandomNumber()),\n        children: \"Generate a random number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: quote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeQuoteAndAuthor(),\n        children: \"Change Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"CRPv1SaI9bYgbL0pjCsUtUMG+iE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gabem/Desktop/get-skill-quote-machine/src/App.js"],"names":["useState","quoteDB","App","quote","setQuote","author","setAuthor","randomNumber","setRandomNumber","quotes","setQuotes","useEffect","fetchQuotes","async","changeQuoteAndAuthor","genRandomNumber","Math","floor","random","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,YAAP;;AAEA,IAAIC,OAAO,GAAG,wIAAd;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,0EAAD,CAAlC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,cAAD,CAApC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;AAEAW,EAAAA,SAAS,CAAEV,OAAD,IAAa;AACrB,UAAMW,WAAW,GAAGC,KAAK,CAACZ,OAAD,CAAzB;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;AAKA,QAAMa,oBAAoB,GAAG,MAAM;AACjCV,IAAAA,QAAQ,CAAC,OAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,aAAD,CAAT;AACD,GAHD;;AAKA,QAAMS,eAAe,GAAG,MAAM;AAC5BX,IAAAA,QAAQ,CAACK,MAAM,CAACO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBT,MAAM,CAACU,MAAlC,CAAD,CAAP,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAA,sCAAoBZ,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMC,eAAe,CAACO,eAAe,EAAhB,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBACGZ;AADH;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAA,kBACGE;AADH;AAAA;AAAA;AAAA;AAAA,cANF,eASE;AAAQ,QAAA,OAAO,EAAE,MAAMS,oBAAoB,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAnCQZ,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport './App.scss';\n\nlet quoteDB = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\n\nfunction App() {\n  const [quote, setQuote] = useState(\"If you do what you’ve always done, you’ll get what you’ve always gotten.\");\n  const [author, setAuthor] = useState(\"Gabriel Mack\");\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [quotes, setQuotes] = useState(null);\n\n  useEffect((quoteDB) => {\n    const fetchQuotes = async(quoteDB)\n  }, [quoteDB])\n  \n\n  const changeQuoteAndAuthor = () => {\n    setQuote(\"balls\");\n    setAuthor(\"Ryan Barros\");\n  }\n\n  const genRandomNumber = () => {\n    setQuote(quotes[Math.floor(Math.random() * quotes.length)]);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Random Number: {randomNumber}</h1>\n        <button onClick={() => setRandomNumber(genRandomNumber())}>Generate a random number</button>\n        <p>\n          {quote}\n        </p>\n        <p>\n          {author}\n        </p>\n        <button onClick={() => changeQuoteAndAuthor()}>Change Quote</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}