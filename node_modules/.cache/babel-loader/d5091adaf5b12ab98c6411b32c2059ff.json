{"ast":null,"code":"var _jsxFileName = \"/home/gabem/Desktop/get-skill-quote-machine/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet quoteDB = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n\nfunction App() {\n  _s();\n\n  const [quote, setQuote] = useState(\"If you do what you’ve always done, you’ll get what you’ve always gotten.\");\n  const [author, setAuthor] = useState(\"Gabriel Mack\");\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [quotes, setQuotes] = useState(null);\n\n  const fetchQuotes = async url => {\n    const response = await fetch(url);\n    const parsedJSON = await response.json();\n    setQuotes(parsedJSON.quotes);\n  };\n\n  useEffect(() => {\n    fetchQuotes(quoteDB);\n  }, [quoteDB]);\n\n  const genRandomNumber = () => {\n    setQuote(quotes[Math.floor(Math.random() * quotes.length)].quote);\n    setAuthor(quotes[Math.floor(Math.random() * quotes.length)].author);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"quote-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"text\",\n          children: quote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"author\",\n          children: author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          id: \"tweet-quote\",\n          target: \"_blank\",\n          href: 'https://twitter.com/intent/tweet?text=' + quote + \" -\" + author,\n          children: \"Tweet Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"new-quote\",\n          onClick: () => setRandomNumber(genRandomNumber()),\n          children: \"Generate a random quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"CRPv1SaI9bYgbL0pjCsUtUMG+iE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gabem/Desktop/get-skill-quote-machine/src/App.js"],"names":["useState","useEffect","quoteDB","App","quote","setQuote","author","setAuthor","randomNumber","setRandomNumber","quotes","setQuotes","fetchQuotes","url","response","fetch","parsedJSON","json","genRandomNumber","Math","floor","random","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,YAAP;;AAEA,IAAIC,OAAO,GAAG,wIAAd;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,0EAAD,CAAlC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,cAAD,CAApC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMY,WAAW,GAAG,MAAMC,GAAN,IAAc;AAChC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,UAAU,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAzB;AACAN,IAAAA,SAAS,CAACK,UAAU,CAACN,MAAZ,CAAT;AACD,GAJD;;AAMAT,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW,CAACV,OAAD,CAAX;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;AAIA,QAAMgB,eAAe,GAAG,MAAM;AAC5Bb,IAAAA,QAAQ,CAACK,MAAM,CAACS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBX,MAAM,CAACY,MAAlC,CAAD,CAAN,CAAkDlB,KAAnD,CAAR;AACAG,IAAAA,SAAS,CAACG,MAAM,CAACS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBX,MAAM,CAACY,MAAlC,CAAD,CAAN,CAAkDhB,MAAnD,CAAT;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,6BACE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA,gCACA;AAAG,UAAA,EAAE,EAAC,MAAN;AAAA,oBACGF;AADH;AAAA;AAAA;AAAA;AAAA,gBADA,eAIA;AAAG,UAAA,EAAE,EAAC,QAAN;AAAA,oBACGE;AADH;AAAA;AAAA;AAAA;AAAA,gBAJA,eAOA;AAAG,UAAA,EAAE,EAAC,aAAN;AAAoB,UAAA,MAAM,EAAC,QAA3B;AAAoC,UAAA,IAAI,EAAE,2CAA2CF,KAA3C,GAAmD,IAAnD,GAA0DE,MAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPA,eAQA;AAAQ,UAAA,EAAE,EAAC,WAAX;AAAuB,UAAA,OAAO,EAAE,MAAMG,eAAe,CAACS,eAAe,EAAhB,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GArCQf,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.scss';\n\nlet quoteDB = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\n\nfunction App() {\n  const [quote, setQuote] = useState(\"If you do what you’ve always done, you’ll get what you’ve always gotten.\");\n  const [author, setAuthor] = useState(\"Gabriel Mack\");\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [quotes, setQuotes] = useState(null);\n\n  const fetchQuotes = async(url) => {\n    const response = await fetch(url);\n    const parsedJSON = await response.json();\n    setQuotes(parsedJSON.quotes);\n  }\n  \n  useEffect(() => {\n    fetchQuotes(quoteDB)\n  }, [quoteDB])\n\n  const genRandomNumber = () => {\n    setQuote(quotes[Math.floor(Math.random() * quotes.length)].quote);\n    setAuthor(quotes[Math.floor(Math.random() * quotes.length)].author);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div id=\"quote-box\">\n        <p id=\"text\">\n          {quote}\n        </p>\n        <p id=\"author\">\n          {author}\n        </p>\n        <a id=\"tweet-quote\" target=\"_blank\" href={'https://twitter.com/intent/tweet?text=' + quote + \" -\" + author}>Tweet Quote</a>\n        <button id=\"new-quote\" onClick={() => setRandomNumber(genRandomNumber())}>Generate a random quote</button>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}