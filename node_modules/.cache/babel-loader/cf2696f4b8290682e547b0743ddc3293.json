{"ast":null,"code":"var _jsxFileName = \"/home/gabem/Desktop/get-skill-quote-machine/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet quoteDB = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n\nfunction App() {\n  _s();\n\n  const [quote, setQuote] = useState(\"If you do what you’ve always done, you’ll get what you’ve always gotten.\");\n  const [author, setAuthor] = useState(\"Gabriel Mack\");\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [quotes, setQuotes] = useState(null);\n  const [accentColor, setAccentColor] = useState(\"#FF6633\");\n\n  const fetchQuotes = async url => {\n    const response = await fetch(url);\n    const parsedJSON = await response.json();\n    setQuotes(parsedJSON.quotes);\n  };\n\n  useEffect(() => {\n    fetchQuotes(quoteDB);\n  }, [quoteDB]);\n\n  const genRandomNumber = () => {\n    setQuote(quotes[Math.floor(Math.random() * quotes.length)].quote);\n    setAuthor(quotes[Math.floor(Math.random() * quotes.length)].author);\n  };\n\n  var colorArray = ['#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6', '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D', '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A', '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC', '#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC', '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399', '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680', '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933', '#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3', '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"quote-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"text\",\n          children: [\"\\\"\", quote, \"\\\"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"author\",\n          children: [\"-\", author]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          id: \"tweet-quote\",\n          target: \"_blank\",\n          href: 'https://twitter.com/intent/tweet?text=' + quote + \" -\" + author,\n          children: \"Tweet Quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"new-quote\",\n          onClick: () => setRandomNumber(genRandomNumber()),\n          children: \"Generate a random quote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LuL9/c+PmZ/OsrIN0rup0NhIfpM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gabem/Desktop/get-skill-quote-machine/src/App.js"],"names":["useState","useEffect","quoteDB","App","quote","setQuote","author","setAuthor","randomNumber","setRandomNumber","quotes","setQuotes","accentColor","setAccentColor","fetchQuotes","url","response","fetch","parsedJSON","json","genRandomNumber","Math","floor","random","length","colorArray"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.scss';\n\nlet quoteDB = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\n\nfunction App() {\n  const [quote, setQuote] = useState(\"If you do what you’ve always done, you’ll get what you’ve always gotten.\");\n  const [author, setAuthor] = useState(\"Gabriel Mack\");\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [quotes, setQuotes] = useState(null);\n  const [accentColor, setAccentColor] = useState(\"#FF6633\")\n\n  const fetchQuotes = async(url) => {\n    const response = await fetch(url);\n    const parsedJSON = await response.json();\n    setQuotes(parsedJSON.quotes);\n  }\n  \n  useEffect(() => {\n    fetchQuotes(quoteDB)\n  }, [quoteDB])\n\n  const genRandomNumber = () => {\n    setQuote(quotes[Math.floor(Math.random() * quotes.length)].quote);\n    setAuthor(quotes[Math.floor(Math.random() * quotes.length)].author);\n  }\n\n  var colorArray = ['#FF6633', '#FFB399', '#FF33FF', '#FFFF99', '#00B3E6', \n\t\t  '#E6B333', '#3366E6', '#999966', '#99FF99', '#B34D4D',\n\t\t  '#80B300', '#809900', '#E6B3B3', '#6680B3', '#66991A', \n\t\t  '#FF99E6', '#CCFF1A', '#FF1A66', '#E6331A', '#33FFCC',\n\t\t  '#66994D', '#B366CC', '#4D8000', '#B33300', '#CC80CC', \n\t\t  '#66664D', '#991AFF', '#E666FF', '#4DB3FF', '#1AB399',\n\t\t  '#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680', \n\t\t  '#4D8066', '#809980', '#E6FF80', '#1AFF33', '#999933',\n\t\t  '#FF3380', '#CCCC00', '#66E64D', '#4D80CC', '#9900B3', \n\t\t  '#E64D66', '#4DB380', '#FF4D4D', '#99E6E6', '#6666FF'];\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div id=\"quote-box\">\n        <p id=\"text\">\n          \"{quote}\"\n        </p>\n        <p id=\"author\">\n          -{author}\n        </p>\n        <a id=\"tweet-quote\" target=\"_blank\" href={'https://twitter.com/intent/tweet?text=' + quote + \" -\" + author}>Tweet Quote</a>\n        <button id=\"new-quote\" onClick={() => setRandomNumber(genRandomNumber())}>Generate a random quote</button>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}