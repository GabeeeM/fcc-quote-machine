{"ast":null,"code":"var _jsxFileName = \"/home/gabem/Desktop/get-skill-quote-machine/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet quoteDB = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\n\nfunction App() {\n  _s();\n\n  const [quote, setQuote] = useState(\"If you do what you’ve always done, you’ll get what you’ve always gotten.\");\n  const [author, setAuthor] = useState(\"Gabriel Mack\");\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [quotes, setQuotes] = useState(null);\n\n  const fetchQuotes = async url => {\n    const response = await fetch(url);\n    const parsedJSON = await response.json();\n    setQuotes(parsedJSON);\n  };\n\n  useEffect(() => {\n    fetchQuotes(quoteDB);\n  }, [quoteDB]);\n\n  const changeQuoteAndAuthor = () => {\n    setQuote(\"balls\");\n    setAuthor(\"Ryan Barros\");\n  };\n\n  const genRandomNumber = () => {\n    setQuote(quotes[Math.floor(Math.random() * quotes.length)]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Random Number: \", randomNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRandomNumber(genRandomNumber()),\n        children: \"Generate a random number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: quote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeQuoteAndAuthor(),\n        children: \"Change Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"CRPv1SaI9bYgbL0pjCsUtUMG+iE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gabem/Desktop/get-skill-quote-machine/src/App.js"],"names":["useState","useEffect","quoteDB","App","quote","setQuote","author","setAuthor","randomNumber","setRandomNumber","quotes","setQuotes","fetchQuotes","url","response","fetch","parsedJSON","json","changeQuoteAndAuthor","genRandomNumber","Math","floor","random","length"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAO,YAAP;;AAEA,IAAIC,OAAO,GAAG,wIAAd;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,0EAAD,CAAlC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,cAAD,CAApC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMY,WAAW,GAAG,MAAMC,GAAN,IAAc;AAChC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,UAAU,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAzB;AACAN,IAAAA,SAAS,CAACK,UAAD,CAAT;AACD,GAJD;;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW,CAACV,OAAD,CAAX;AACD,GAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;;AAKA,QAAMgB,oBAAoB,GAAG,MAAM;AACjCb,IAAAA,QAAQ,CAAC,OAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,aAAD,CAAT;AACD,GAHD;;AAKA,QAAMY,eAAe,GAAG,MAAM;AAC5Bd,IAAAA,QAAQ,CAACK,MAAM,CAACU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBZ,MAAM,CAACa,MAAlC,CAAD,CAAP,CAAR;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAA,sCAAoBf,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMC,eAAe,CAACU,eAAe,EAAhB,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBACGf;AADH;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAA,kBACGE;AADH;AAAA;AAAA;AAAA;AAAA,cANF,eASE;AAAQ,QAAA,OAAO,EAAE,MAAMY,oBAAoB,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAzCQf,G;;KAAAA,G;AA2CT,eAAeA,GAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.scss';\n\nlet quoteDB = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\n\nfunction App() {\n  const [quote, setQuote] = useState(\"If you do what you’ve always done, you’ll get what you’ve always gotten.\");\n  const [author, setAuthor] = useState(\"Gabriel Mack\");\n  const [randomNumber, setRandomNumber] = useState(0);\n  const [quotes, setQuotes] = useState(null);\n\n  const fetchQuotes = async(url) => {\n    const response = await fetch(url);\n    const parsedJSON = await response.json();\n    setQuotes(parsedJSON)\n  }\n  \n  useEffect(() => {\n    fetchQuotes(quoteDB)\n  }, [quoteDB])\n  \n\n  const changeQuoteAndAuthor = () => {\n    setQuote(\"balls\");\n    setAuthor(\"Ryan Barros\");\n  }\n\n  const genRandomNumber = () => {\n    setQuote(quotes[Math.floor(Math.random() * quotes.length)]);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Random Number: {randomNumber}</h1>\n        <button onClick={() => setRandomNumber(genRandomNumber())}>Generate a random number</button>\n        <p>\n          {quote}\n        </p>\n        <p>\n          {author}\n        </p>\n        <button onClick={() => changeQuoteAndAuthor()}>Change Quote</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}