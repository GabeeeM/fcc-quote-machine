{"ast":null,"code":"var _jsxFileName = \"/home/gabem/Desktop/get-skill-quote-machine/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [quote, setQuote] = useState(\"If you do what you’ve always done, you’ll get what you’ve always gotten.\");\n  const [author, setAuthor] = useState(\"Gabriel Mack\");\n  const [randomNumber, setRandomNumber] = useState(0);\n\n  const changeQuoteAndAuthor = () => {\n    setQuote(\"balls\");\n    setAuthor(\"Ryan Barros\");\n  };\n\n  const genRandomNumber = () => {\n    return Math.random() * 100;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Random Number: \", randomNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setRandomNumber(genRandomNumber()),\n        children: \"Generate a random number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: quote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: author\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeQuoteAndAuthor(),\n        children: \"Change Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GYUJ1EFaRBdIqRkAemC1bzYbhpk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/gabem/Desktop/get-skill-quote-machine/src/App.js"],"names":["useState","App","quote","setQuote","author","setAuthor","randomNumber","setRandomNumber","changeQuoteAndAuthor","genRandomNumber","Math","random"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,YAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,0EAAD,CAAlC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,cAAD,CAApC;AACA,QAAM,CAACM,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,CAAD,CAAhD;;AAEA,QAAMQ,oBAAoB,GAAG,MAAM;AACjCL,IAAAA,QAAQ,CAAC,OAAD,CAAR;AACAE,IAAAA,SAAS,CAAC,aAAD,CAAT;AACD,GAHD;;AAKA,QAAMI,eAAe,GAAG,MAAM;AAC5B,WAAOC,IAAI,CAACC,MAAL,KAAgB,GAAvB;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAA,sCAAoBL,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,MAAMC,eAAe,CAACE,eAAe,EAAhB,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBACGP;AADH;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAA,kBACGE;AADH;AAAA;AAAA;AAAA;AAAA,cANF,eASE;AAAQ,QAAA,OAAO,EAAE,MAAMI,oBAAoB,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA7BQP,G;;KAAAA,G;AA+BT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react';\nimport './App.scss';\n\nfunction App() {\n  const [quote, setQuote] = useState(\"If you do what you’ve always done, you’ll get what you’ve always gotten.\");\n  const [author, setAuthor] = useState(\"Gabriel Mack\");\n  const [randomNumber, setRandomNumber] = useState(0);\n\n  const changeQuoteAndAuthor = () => {\n    setQuote(\"balls\");\n    setAuthor(\"Ryan Barros\");\n  }\n\n  const genRandomNumber = () => {\n    return Math.random() * 100;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Random Number: {randomNumber}</h1>\n        <button onClick={() => setRandomNumber(genRandomNumber())}>Generate a random number</button>\n        <p>\n          {quote}\n        </p>\n        <p>\n          {author}\n        </p>\n        <button onClick={() => changeQuoteAndAuthor()}>Change Quote</button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}